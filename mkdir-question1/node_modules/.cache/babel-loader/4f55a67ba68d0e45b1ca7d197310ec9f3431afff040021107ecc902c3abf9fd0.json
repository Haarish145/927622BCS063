{"ast":null,"code":"const API_KEY = 'demo'; // Use your own API key if available\nconst BASE_URL = 'https://www.alphavantage.co/query';\nexport async function fetchStockPrice(symbol) {\n  const url = `${BASE_URL}?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=${API_KEY}`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data['Time Series (Daily)']) {\n      return data['Time Series (Daily)'];\n    } else {\n      throw new Error('Invalid data from API');\n    }\n  } catch (error) {\n    console.error('Error fetching stock price:', error);\n    return null;\n  }\n}","map":{"version":3,"names":["API_KEY","BASE_URL","fetchStockPrice","symbol","url","response","fetch","data","json","Error","error","console"],"sources":["C:/Users/SYED MOHAMED IBRAHIM/Desktop/placeeee/927622BCS063/mkdir-question1/src/api.js"],"sourcesContent":["const API_KEY = 'demo'; // Use your own API key if available\r\nconst BASE_URL = 'https://www.alphavantage.co/query';\r\n\r\nexport async function fetchStockPrice(symbol) {\r\n  const url = `${BASE_URL}?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=${API_KEY}`;\r\n  try {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    if (data['Time Series (Daily)']) {\r\n      return data['Time Series (Daily)'];\r\n    } else {\r\n      throw new Error('Invalid data from API');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching stock price:', error);\r\n    return null;\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,MAAM,CAAC,CAAC;AACxB,MAAMC,QAAQ,GAAG,mCAAmC;AAEpD,OAAO,eAAeC,eAAeA,CAACC,MAAM,EAAE;EAC5C,MAAMC,GAAG,GAAG,GAAGH,QAAQ,sCAAsCE,MAAM,WAAWH,OAAO,EAAE;EACvF,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAAC,qBAAqB,CAAC,EAAE;MAC/B,OAAOA,IAAI,CAAC,qBAAqB,CAAC;IACpC,CAAC,MAAM;MACL,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAAC;IAC1C;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}