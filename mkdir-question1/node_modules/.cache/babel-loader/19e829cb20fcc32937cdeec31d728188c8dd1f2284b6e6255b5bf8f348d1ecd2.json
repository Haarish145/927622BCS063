{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SYED MOHAMED IBRAHIM\\\\Desktop\\\\hii\\\\927622BCS063\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StockSelector from './StockSelector';\nimport PriceChart from './PriceChart';\nimport { fetchStockPrice } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedStocks, setSelectedStocks] = useState([]);\n  const [aggregatedData, setAggregatedData] = useState([]);\n  useEffect(() => {\n    async function fetchAndAggregate() {\n      if (selectedStocks.length === 0) {\n        setAggregatedData([]);\n        return;\n      }\n      const allData = {};\n      for (const symbol of selectedStocks) {\n        const data = await fetchStockPrice(symbol);\n        if (data) {\n          for (const [date, priceInfo] of Object.entries(data)) {\n            const closePrice = parseFloat(priceInfo['4. close']);\n            if (!allData[date]) {\n              allData[date] = [];\n            }\n            allData[date].push(closePrice);\n          }\n        }\n      }\n\n      // Aggregate data by date\n      const aggregatedArray = Object.entries(allData).map(([date, prices]) => {\n        const sum = prices.reduce((a, b) => a + b, 0);\n        const avg = sum / prices.length;\n        const max = Math.max(...prices);\n        const min = Math.min(...prices);\n        return {\n          date,\n          average: avg,\n          max,\n          min\n        };\n      }).sort((a, b) => new Date(a.date) - new Date(b.date));\n      setAggregatedData(aggregatedArray);\n    }\n    fetchAndAggregate();\n  }, [selectedStocks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Price Aggregation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StockSelector, {\n      selectedStocks: selectedStocks,\n      onChange: setSelectedStocks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PriceChart, {\n      data: aggregatedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YTgwFV0S9G67IwYFebH5W3SKiMw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","StockSelector","PriceChart","fetchStockPrice","jsxDEV","_jsxDEV","App","_s","selectedStocks","setSelectedStocks","aggregatedData","setAggregatedData","fetchAndAggregate","length","allData","symbol","data","date","priceInfo","Object","entries","closePrice","parseFloat","push","aggregatedArray","map","prices","sum","reduce","a","b","avg","max","Math","min","average","sort","Date","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["C:/Users/SYED MOHAMED IBRAHIM/Desktop/hii/927622BCS063/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport StockSelector from './StockSelector';\r\nimport PriceChart from './PriceChart';\r\nimport { fetchStockPrice } from './api';\r\n\r\nfunction App() {\r\n  const [selectedStocks, setSelectedStocks] = useState([]);\r\n  const [aggregatedData, setAggregatedData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchAndAggregate() {\r\n      if (selectedStocks.length === 0) {\r\n        setAggregatedData([]);\r\n        return;\r\n      }\r\n\r\n      const allData = {};\r\n\r\n      for (const symbol of selectedStocks) {\r\n        const data = await fetchStockPrice(symbol);\r\n        if (data) {\r\n          for (const [date, priceInfo] of Object.entries(data)) {\r\n            const closePrice = parseFloat(priceInfo['4. close']);\r\n            if (!allData[date]) {\r\n              allData[date] = [];\r\n            }\r\n            allData[date].push(closePrice);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Aggregate data by date\r\n      const aggregatedArray = Object.entries(allData)\r\n        .map(([date, prices]) => {\r\n          const sum = prices.reduce((a, b) => a + b, 0);\r\n          const avg = sum / prices.length;\r\n          const max = Math.max(...prices);\r\n          const min = Math.min(...prices);\r\n          return { date, average: avg, max, min };\r\n        })\r\n        .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n      setAggregatedData(aggregatedArray);\r\n    }\r\n\r\n    fetchAndAggregate();\r\n  }, [selectedStocks]);\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>Stock Price Aggregation</h1>\r\n      <StockSelector selectedStocks={selectedStocks} onChange={setSelectedStocks} />\r\n      <PriceChart data={aggregatedData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}